{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/HeaderComponent.js","components/MenuComponent.js","components/CommentForm.js","components/DishdetailComponent.js","components/ContactComponent.js","components/AboutUsComponent.js","components/FooterComponent.js","redux/ActionCreator.js","redux/ActionTypes.js","components/MainComponent.js","redux/forms.js","redux/dishes.js","redux/comments.js","redux/leaders.js","redux/promotions.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","str","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","Header","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","onClick","NavbarBrand","href","height","width","Collapse","isOpen","navbar","Nav","NavItem","to","Button","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","id","innerRef","input","check","color","Component","RenderMenuItem","CardImgOverlay","Menu","menu","dishes","map","key","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","SubmitComment","handleSubmit","values","postComment","dishId","rating","message","Row","md","Col","select","model","text","placeholder","validators","minLength","show","messages","HtmlFor","textarea","rows","size","RenderDish","RenderComments","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","class","comments","isNumber","validEmail","test","Contact","postFeedback","firstname","lastname","telnum","email","agree","contactType","resetFeedbackForm","role","offset","checkbox","RenderLeader","Media","tag","left","middle","object","body","heading","About","leaders","CardHeader","title","list","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","actions","reset","newFeedback","InitialFeedback","Dishes","action","Comments","concat","Leaders","Promotions","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b701807c.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return (\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading...</p>\n        </div>\n\n    );\n}","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\nimport {Card ,CardImg , CardBody ,CardText ,CardTitle,CardSubtitle } from 'reactstrap';\nimport {Loading} from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl'\n\nimport {FadeTransform} from 'react-animation-components';\n\nfunction RenderCard({item, isLoading , errMess,str})\n{\n    if(isLoading){\n        return (\n            <Loading/>\n            \n        );\n    }\n\n    else if(errMess){\n        return(\n        <div>\n            <h4>{errMess}</h4>\n            <p>{str}</p>\n        </div>\n       \n        );\n    }\n    else {\n        return(\n            <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n            <Card>\n                <CardImg src={baseUrl +item.image} alt={item.name} />\n                <CardBody>\n                <CardTitle>{item.name}</CardTitle>\n                {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\n                <CardText>{item.description}</CardText>\n                </CardBody>\n            </Card>\n            </FadeTransform>\n    \n        );\n    }\n    \n}\n\nfunction Home(props)\n{\n    \n        return(\n            <div className=\"container\">\n                <div className=\"row align-items-start\">\n                    <div className=\"col-12 col-md m-1\">\n                        <RenderCard item={props.dish} \n                                    isLoading={props.dishesLoading} \n                                    errMess={props.dishesErrMess} \n                                    str = 'dish'/>\n                    </div>\n                    <div className=\"col-12 col-md m-1\">\n                        <RenderCard item={props.promotion}\n                                    isLoading={props.promoLoading} \n                                    errMess={props.promoErrMess}\n                                    str = 'promo'/>\n                    </div>\n                    <div className=\"col-12 col-md m-1\">\n                        <RenderCard item={props.leader}\n                                    isLoading={props.leadersLoading} \n                                    errMess={props.leadersErrMess}\n                                    str = 'leader'/>\n                    </div>\n                </div>\n            </div>\n        );\n   \n}\n\nexport default Home;\n","import React ,  { Component } from 'react';\nimport { Navbar, NavbarBrand ,Jumbotron,Nav,NavbarToggler,Collapse,NavItem,Button,Modal,ModalHeader,ModalBody, Form, FormGroup, Input, Label} from 'reactstrap';\nimport {NavLink} from 'react-router-dom';\n\nclass Header extends Component{\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            isNavOpen : false,\n            isModalOpen : false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav()\n    {\n        this.setState({\n            isNavOpen : !this.state.isNavOpen\n        });\n    }\n\n    toggleModal()\n    {\n        this.setState({\n            isModalOpen : !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event){\n        this.toggleModal();\n        alert(\"Username : \" + this.username.value + \" Password : \"+this.password.value +\" Remember : \"+this.remember.checked);\n        //directly accessing input fields from dom , using 'name' given in login form\n        event.preventDefault(); \n    }\n\n    render()\n    {\n        return(\n            <>\n            <Navbar dark expand=\"md\">\n                <div className=\"container\">\n                    <NavbarToggler onClick={this.toggleNav}/>\n                    <NavbarBrand className=\"mr-auto\" href=\"/\">\n                        <img src=\"assets\\images\\logo.png\" height=\"30\" width=\"41\" alt=\"logo\"/>\n                    </NavbarBrand>\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\n                        <Nav navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/home\">\n                                    <span className=\"fa fa-home fa-lg\"></span> Home\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                    <span className=\"fa fa-info fa-lg\"></span> About Us\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/menu\">\n                                    <span className=\"fa fa-list fa-lg\"></span> Menu\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/contactus\">\n                                    <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                        \n                        <Nav className=\"ml-auto\" navbar> \n                            <NavItem>\n                                <Button onClick={this.toggleModal}>\n                                    <span className=\"fa fa-sign-in fa-lg\"></span> Login\n                                </Button>\n                            </NavItem>\n                        </Nav>\n                         \n                    </Collapse>\n                </div>\n            </Navbar>\n            <Jumbotron>\n                <div className=\"container\">\n                    <div className=\"row row-header\">\n                        <div className=\"col-12 col-sm-6\">\n                            <h1>Ristorante Con Fusion</h1>\n                            <p>We take inspiration from the World's best cuisines,\n                               and create a unique fusion experience. Our lipsmacking\n                               creations will tickle your culinary senses!</p>\n                        </div>\n                    </div>\n                </div>\n            </Jumbotron>\n            <Modal  isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                <ModalBody>\n                    <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef = {(input)=> this.username = input \n                                                //extracting reference from the ip fields from dom where the values are stored and using it in handleLogin\n                                                } />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input}  />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                    innerRef={(input) => this.remember = input}  />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                    </Form>\n                </ModalBody>\n            </Modal>\n            </>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport {Loading} from './LoadingComponent'\nimport {baseUrl} from '../shared/baseUrl';\n\n    function RenderMenuItem ({dish, onClick}) {\n        return (\n            <Link to={`/menu/${dish.id}`}>\n            <Card>                \n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                <CardImgOverlay>\n                    <CardTitle>{dish.name}</CardTitle>\n                </CardImgOverlay>\n            </Card>\n            </Link>\n        );\n    }\n\n    const Menu = (props) => {\n        //remember the state's structure was changed\n        const menu = props.dishes.dishes.map((dish) => {\n            return (\n                <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\n                    <RenderMenuItem dish={dish} />\n                </div>\n            );\n        });\n\n        if(props.dishes.isLoading){\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n\n        else if(props.dishes.errMess){\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <p>Failed to fetch</p>\n                        <h4>{props.dishes.errMess}</h4>\n                    </div>\n                </div>\n            );\n        }\n\n        else{\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"/home\">Home</Link>\n                            </BreadcrumbItem>\n    \n                            <BreadcrumbItem active>\n                                Menu\n                            </BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>Menu</h3>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        {menu}\n                    </div>\n                </div>\n            );\n        }\n    }\n\n        \n\n\nexport default Menu;","import React, {Component} from 'react';\nimport {Button, Label,Col,Row,Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap'\nimport {Control, LocalForm,Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\n\n\nclass SubmitComment extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isModalOpen : false\n        };\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        \n        \n    }\n\n    toggleModal()\n    {\n        this.setState({\n            isModalOpen : !this.state.isModalOpen\n        });\n    }\n\n   \n\n    handleSubmit(values){  //bind this in the constructor so it is available for use\n        this.toggleModal();\n        this.props.postComment(this.props.dishId, values.rating, values.name, values.message)\n        //console.log(\"Current state is : \"+JSON.stringify(values));\n        //alert(\"Current state is : \"+JSON.stringify(values));\n        //event.preventDefault(); //to prevent going to the next page after submitting which is usually the default action \n                                \n    }\n\n    render(){ \n    return(\n        <div className=\"container\">\n             <Button onClick={this.toggleModal}>\n                <span className=\"fa fa-pencil fa-lg\"></span> Submit Comments\n            </Button>\n            <Modal  isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                <ModalHeader toggle={this.toggleModal}>Submit Comments</ModalHeader>\n                <ModalBody>\n                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                            <Label htmlFor=\"rating\" md={4}>Rating</Label>\n                                <Col md={12}>\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\">\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"name\" md={4}>Your Name</Label>\n                                <Col md={12}>\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\n                                        placeholder=\"Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".name\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label HtmlFor=\"message\" md={4}>Your Feedback</Label>\n                                <Col md={12}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"6\"\n                                                        className=\"form-control\"/>\n                                           \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10}}>\n                                    <Button type=\"submit\" color=\"primary\">Submit</Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                </ModalBody>\n            </Modal>\n        </div>\n\n    );\n    }\n}\n\nexport default SubmitComment;","import React  from 'react'; \nimport { Card, CardImg , CardText, CardBody, CardTitle , Breadcrumb ,BreadcrumbItem} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport  SubmitComment  from './CommentForm';\nimport { Loading } from './LoadingComponent';\nimport {baseUrl} from '../shared/baseUrl';\nimport { FadeTransform , Fade , Stagger } from 'react-animation-components';\n\n    function RenderDish({dish})\n    {\n      \n                return(                 \n                    \n                    <div>   \n                        \n                        <FadeTransform\n                                in\n                                transformProps={{\n                                    exitTransform: 'scale(0.5) translateY(-50%)'\n                                }}>\n                                <Card>\n                                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                                    <CardBody>\n                                            <CardTitle>{dish.name}</CardTitle>\n                                            <CardText>{dish.description}</CardText>\n                                    </CardBody> \n                                </Card>\n                            </FadeTransform>\n                                                                \n                        \n                    </div>\n                );\n           \n          \n\n        }\n\n        function RenderComments({comment,postComment,dishId})\n        {\n           \n            return(\n            <div className=\"container\">\n                \n                <Card>\n                <CardBody>\n                    <CardTitle><h4>Comments</h4></CardTitle>\n                    <CardText>\n\n                        <ul>\n                        <Stagger in>\n                            {comment.map((comment)=>{\n                                return(\n                                    <Fade in>\n                                    <li key={comment.id}>\n                                        <p>{comment.comment}</p>\n                                        <p>--{comment.author},{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\n                                    </li>\n                                    </Fade>\n                                );\n                            })}\n                        </Stagger>\n                        </ul>    \n                \n                    </CardText>\n                    <SubmitComment dishId={dishId} postComment={postComment}/>\n\n                </CardBody>\n                </Card>\n                \n                    \n                \n                </div>\n            \n            );\n           \n                \n            }\n           \n        \n\n    \n\n    function DishDetail(props){\n\n        if(props.isLoading){\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n\n        else if(props.errMess){\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            );\n        }\n\n        else if(props.dish!=null){ \n            return(\n                <div className=\"container\">\n                        <div className=\"row\">\n                        <Breadcrumb>\n                        \n                            <BreadcrumbItem>\n                                <Link to=\"/menu\">Menu</Link>\n                            </BreadcrumbItem>\n    \n                            <BreadcrumbItem active>\n                                {props.dish.name}\n                            </BreadcrumbItem>\n    \n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>{props.dish.name}</h3>\n                            <hr />\n                        </div>\n                    </div> \n                    <div className=\"container\">\n                    <div class=\"row\">\n                    <div class=\"col-12 col-md-5 m-1\">\n                    <RenderDish dish={props.dish}/>\n                    </div>\n                    <div class=\"col-12 col-md-5 m-1\">\n                    <RenderComments comment = {props.comments}\n                                    postComment = {props.postComment}\n                                    dishId = {props.dish.id}\n                                    \n                                    />\n                    </div>\n                    </div>\n                    </div>\n                   \n                   \n               </div>\n            );\n\n        }\n    }  \n            \n        \n       \n    \n\n\nexport default DishDetail;\n","import React, {Component} from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Label,Col,Row} from 'reactstrap'\nimport {Link} from 'react-router-dom';\n//import {Control, LocalForm,Errors } from 'react-redux-form';\nimport {Control , Form , Errors , actions } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst isNumber = (val) => /^[0-9]*$/;\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props){\n        super(props);\n\n        \n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        \n        \n    }\n\n   \n\n    handleSubmit(values){  //bind this in the constructor so it is available for use\n        \n        //console.log(\"Current state is : \"+JSON.stringify(values));\n        //alert(\"Current state is : \"+JSON.stringify(values));\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\n        //event.preventDefault(); //to prevent going to the next page after submitting which is usually the default action \n        this.props.resetFeedbackForm();\n    }\n\n    render(){ \n\n       \n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to=\"/home\">Home</Link>\n                        </BreadcrumbItem>\n\n                        <BreadcrumbItem active>\n                             Contact US\n                        </BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                <h3>Location Information</h3>\n                </div>\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                </div>\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\n                    <h5>Map of our Location</h5>\n                </div>\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\n                    <div className=\"btn-group\" role=\"group\">\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h3>Send us your feedback</h3>\n                </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                        <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(8), maxLength: maxLength(10), isNumber\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required ',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:6 ,offset:2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\" className=\"form-check-input\"/>\n                                             {' '}\n                                            <strong> May we contact you ? </strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size:3 ,offset:1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\n                                    <option>Tel.</option>\n                                    <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label HtmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"6\"\n                                                        className=\"form-control\"/>\n                                           \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10 , offset:2}}>\n                                    <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        \n    );\n}\n}\n\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { FadeTransform , Fade , Stagger } from 'react-animation-components';\nimport {baseUrl} from '../shared/baseUrl';\n\n\nfunction RenderLeader({leader}) {\n    \n\n    return (\n\n      <div className=\"container\">\n               \n          <div key={leader.id} className=\"col-12 mt-5\">\n            <Fade in>\n            <Media tag=\"li\">\n              <Media left middle>\n                  <Media object src={baseUrl +leader.image} alt={leader.name} />\n              </Media>\n              <Media body className=\"ml-5\">\n                <Media heading>{leader.name}</Media>\n                <h6>{leader.designation}</h6>\n                <p>{leader.description}</p>\n              </Media>\n            </Media>\n            </Fade>\n          </div>\n         \n      </div>\n    );\n}\n\nfunction About(props) {\n    \n    const leaders = props.leaders.leaders.map((leader) => {\n        return (\n           <RenderLeader leader={leader}/>\n        );\n    });\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                    <Stagger in>\n                        {leaders}\n                    </Stagger>\n                    </Media>\n                    \n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props)\n{\n    return(\n        <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to=\"/home\">Home</Link></li>\n                        <li><Link to=\"/aboutus\">About</Link></li>\n                        <li><Link to=\"/menu\">Menu</Link></li>\n                        <li><Link to=\"/contactus\">Contact</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n\t\t              121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                         confusion@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    );\n}\n\nexport default Footer;","import * as ActionTypes from './ActionTypes';\nimport { DISHES } from '../shared/dishes'; //making actionCreator supply this info to dishes reducer\nimport {baseUrl} from '../shared/baseUrl';\nimport { findRenderedDOMComponentWithClass } from 'react-dom/test-utils';\n\nexport const addComment = (comment) => ({\n    type : ActionTypes.ADD_COMMENT,\n    payload : comment\n});\n//action creator is returning a plain js object that has type of action and payload(info for the action to work on)\n//send this action to the store for dispatching\n//since actions needs to be done only on comments.js (reducer in redux), import this , there.\n\n//this is aslo a thunk ,  returns a function\nexport const postComment = (dishId , rating , author , comment) => (dispatch) => {\n        const newComment = {\n          dishId: dishId,\n          rating: rating,\n          author: author,\n          comment: comment\n      };\n      newComment.date = new Date().toISOString();\n\n      return fetch(baseUrl + 'comments',{\n        method : 'POST',\n        body : JSON.stringify(newComment),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n      })\n      //after this operation obviously you'll receive a response from the server\n      \n      .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n      //server includes a new id and sends back the updated comment , received as param : response\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\n};\n\nexport const postFeedback = (firstname , lastname , telnum , email, agree, contactType ,message) => (dispatch) => {\n  const newFeedback = {\n    firstname : firstname,\n    lastname : lastname,\n    telnum : telnum,\n    email : email,\n    agree:agree,\n    contactType : contactType,\n    message : message\n};\nnewFeedback.date = new Date().toISOString();\n\nreturn fetch(baseUrl + 'feedback',{\n  method : 'POST',\n  body : JSON.stringify(newFeedback),\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  credentials: \"same-origin\"\n})\n//after this operation obviously you'll receive a response from the server\n\n.then(response => {\n  if (response.ok) {\n    return response;\n  } else {\n    var error = new Error('Error ' + response.status + ': ' + response.statusText);\n    error.response = response;\n    throw error;\n  }\n},\nerror => {\n      throw error;\n})\n//server includes a new id and sends back the updated comment , received as param : response\n.then(response => response.json())\n.then(response => {console.log(JSON.stringify(response)); alert(JSON.stringify(response));})\n.catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\n};\n\n\n \n//fetchDishes is defined as a THUNK  which returns a function that has access to dispatch and state\nexport const fetchDishes = () => (dispatch) => {\n    \n  dispatch(dishesLoading())\n\n  return fetch(baseUrl + 'dishes')\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(dishes => dispatch(addDishes(dishes)))\n  .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n});\n\n\nexport const fetchComments = () => (dispatch) => {    \n    return fetch(baseUrl + 'comments')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n    \n  dispatch(leadersLoading());\n\n  return fetch(baseUrl + 'leaders')\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(leaders => dispatch(addLeaders(leaders)))\n  .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n  type: ActionTypes.LEADERS_FAILED,\n  payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders\n});\n","export const ADD_COMMENT = 'ADD_COMMENT'; //exporting a string constant, all actions are exported as string\n                                          // constants to be handled with ease\nexport const DISHES_LOADING = 'DISHES_lOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\n\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\n\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\n\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\n\n\n\n","import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Header from './HeaderComponent';\nimport Menu from './MenuComponent';\nimport DishDetail from './DishdetailComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutUsComponent'\nimport Footer from './FooterComponent';\nimport {postComment,postFeedback, fetchDishes,fetchComments,fetchPromos,fetchLeaders} from '../redux/ActionCreator';\n\nimport {Route , Switch , Redirect , withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { actions } from 'react-redux-form';\n\nimport { TransitionGroup , CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => { //state is a paramater whic represents redux store states ,\n           // and this function will map redux store's state to props which will be available to the components\n           //see export\n  return {\n      dishes : state.dishes,\n      comments : state.comments,\n      promotions : state.promotions,\n      leaders : state.leaders\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  //addComment : (dishId, rating, author, comment) => dispatch(addComment(dishId, rating, author, comment)),\n  //dispatch takes actioncreator as parameter and that needs the four paramters ,\n  //basically a function call to the addComment actionCreator\n  //function returns action object which is given to dispatcher that is supplied as a function to addComment\n  //see export & how this is made use of in the rendering ,DishDetail part and alter dishDetailComp accordingly\n\n  postComment : (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n  fetchDishes: () => { dispatch(fetchDishes())},\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\n  fetchComments: () => dispatch(fetchComments()),\n  fetchPromos: () => dispatch(fetchPromos()),\n  fetchLeaders : () => dispatch(fetchLeaders()),\n  postFeedback : (firstname , lastname , telnum , email, agree, contactType ,message) => dispatch(postFeedback(firstname , lastname , telnum , email, agree, contactType ,message))\n});\n\nclass Main extends Component {\n\n  constructor(props) {\n    super(props);\n   \n  }\n\n  componentDidMount(){ //good time to fetch data when the component mounts , call fetch dishes here\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n\n  \n\n  render() {\n    const DishWithId = ({match}) =>{\n      return(      \n        <DishDetail   dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\n                      isLoading={this.props.dishes.isLoading}\n                      errMess={this.props.dishes.errMess}\n                      \n                      comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\n                      commentsErrMess={this.props.comments.errMess}\n                      postComment={this.props.postComment}\n                    />\n      );\n    }\n    const HomePage = () => {\n      return( //dishes.dishes because we have changed the state's structure in the dishes reducer\n        <Home   dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n                dishesLoading={this.props.dishes.isLoading}\n                dishesErrMess={this.props.dishes.errMess}\n                \n                promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n                promoLoading={this.props.promotions.isLoading}\n                promoErrMess={this.props.promotions.errMess}\n                \n                leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n                leadersLoading={this.props.leaders.isLoading}\n                leadersErrMess={this.props.leaders.errMess}\n        />\n      );\n    }\n    return (\n      <div>\n        <Header />\n        <TransitionGroup>\n        <CSSTransition key={this.props.location.key} classNames = \"page\" timeout={300}>\n        <Switch>\n          <Route path=\"/home\" component={HomePage}/>\n          <Route exact path= \"/menu\" component={() => <Menu dishes={this.props.dishes}/>}/>\n          <Route path=\"/menu/:dishId\" component={DishWithId} />\n          <Route exact path= \"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm}\n                                                                    postFeedback={this.props.postFeedback}/>}/>\n          <Route path=\"/aboutus\" component={() => <About leaders = {this.props.leaders}/>}/>\n          <Redirect to=\"/home\"/>\n        </Switch>\n        </CSSTransition>\n        </TransitionGroup>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n    isLoading : true,\n    errMess : null,\n    dishes : []\n}, action) => {\n    switch(action.type){\n        case ActionTypes.DISHES_LOADING :\n            return {...state, isLoading : true , errMess : null, dishes : [] } \n            //... is the spread operator that expands the state\n            //statement creates(& makes changes to) new object from the state and returns that object \n        case ActionTypes.DISHES_FAILED :\n            return {...state, isLoading : false , errMess : action.payload , dishes : [] } \n\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading : false , errMess : null, dishes : action.payload } \n\n        default:\n            return state;\n    }\n};\n\n","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENTS:\n      return {...state, errMess: null, comments: action.payload};\n\n    case ActionTypes.COMMENTS_FAILED:\n      return {...state, errMess: action.payload};\n\n    case ActionTypes.ADD_COMMENT:\n        var comment = action.payload;\n        //since you cannot mutate the state...\n        return { ...state, comments: state.comments.concat(comment)};\n\n    default:\n      return state;\n  }\n};\n\n//changes are not persisted here, once the application restarts the added comment in memory gets lost ","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state={\n    isLoading: true,\n    errMess: null,\n    leaders:[]\n}, action) =>{\n    switch(action.type){\n        case ActionTypes.ADD_LEADERS:\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\n\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errMess: null, leaders: []}\n\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, leaders :[]};\n        default:\n            return state;\n    }\n};\n\n\n\n","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state  = { \n    isLoading: true,\n    errMess: null,\n    promotions:[]\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, promotions :[]};\n\n        default:\n          return state;\n      }\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';//to make redux store available to all react comps in the application\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore(); \n\nclass App extends Component {\n\n  \n  render() {  \n    return (\n    <Provider store={store}>\n    <BrowserRouter>\n      <div>\n        <Main />\n      </div>\n    </BrowserRouter>\n    </Provider>\n  );\n}\n}\n\nexport default App;\n","import { createStore , combineReducers , applyMiddleware} from 'redux';\nimport {createForms } from 'react-redux-form';\n//cerateForms enables us to add form state to the store \nimport {InitialFeedback} from './forms.js';\n\nimport {Dishes} from './dishes';\nimport {Comments} from './comments';\nimport {Leaders} from './leaders';\nimport {Promotions} from './promotions';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nexport const ConfigureStore = () => {\n    const store = createStore( //since createStore takes enhancer as the second parameter \n                               //and applyMiddleware returns one...\n        combineReducers({\n            dishes : Dishes,\n            comments : Comments,\n            leaders : Leaders,\n            promotions : Promotions,\n            ...createForms ({ //automatically add the necessary reducer functions & the info into create store\n                feedback : InitialFeedback\n            })\n        }),\n\n        applyMiddleware (thunk,logger) //both thunk and logger are supplied for enhancing our store\n        \n\n    );\n        return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css'\nimport 'bootstrap-social/bootstrap-social.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}